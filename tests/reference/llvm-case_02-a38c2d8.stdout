; ModuleID = 'LFortran'
source_filename = "LFortran"

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@6 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@7 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@8 = private unnamed_addr constant [2 x i8] c" \00", align 1
@9 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@10 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@11 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@12 = private unnamed_addr constant [2 x i8] c" \00", align 1
@13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@14 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@15 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@16 = private unnamed_addr constant [2 x i8] c" \00", align 1
@17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@18 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@19 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@20 = private unnamed_addr constant [2 x i8] c" \00", align 1
@21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@22 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@23 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@24 = private unnamed_addr constant [2 x i8] c" \00", align 1
@25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@26 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@27 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@30 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@31 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@32 = private unnamed_addr constant [11 x i8] c"ERROR STOP\00", align 1
@33 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@34 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@35 = private unnamed_addr constant [2 x i8] c" \00", align 1
@36 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@37 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@38 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@39 = private unnamed_addr constant [2 x i8] c" \00", align 1
@40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@41 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@42 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@43 = private unnamed_addr constant [2 x i8] c" \00", align 1
@44 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@45 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@46 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@47 = private unnamed_addr constant [2 x i8] c" \00", align 1
@48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@49 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@50 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@51 = private unnamed_addr constant [2 x i8] c" \00", align 1
@52 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@53 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@54 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@55 = private unnamed_addr constant [2 x i8] c" \00", align 1
@56 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@57 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@58 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@59 = private unnamed_addr constant [2 x i8] c" \00", align 1
@60 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@61 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@62 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@63 = private unnamed_addr constant [2 x i8] c" \00", align 1
@64 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@65 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@66 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@67 = private unnamed_addr constant [2 x i8] c" \00", align 1
@68 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@69 = private unnamed_addr constant [11 x i8] c"Excellent!\00", align 1
@70 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@71 = private unnamed_addr constant [2 x i8] c" \00", align 1
@72 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@73 = private unnamed_addr constant [11 x i8] c"Very good!\00", align 1
@74 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@75 = private unnamed_addr constant [2 x i8] c" \00", align 1
@76 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@77 = private unnamed_addr constant [11 x i8] c"Well done!\00", align 1
@78 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@79 = private unnamed_addr constant [2 x i8] c" \00", align 1
@80 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@81 = private unnamed_addr constant [9 x i8] c"Not bad!\00", align 1
@82 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@83 = private unnamed_addr constant [2 x i8] c" \00", align 1
@84 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@85 = private unnamed_addr constant [12 x i8] c"You passed!\00", align 1
@86 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@87 = private unnamed_addr constant [2 x i8] c" \00", align 1
@88 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@89 = private unnamed_addr constant [18 x i8] c"Better try again!\00", align 1
@90 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@91 = private unnamed_addr constant [2 x i8] c" \00", align 1
@92 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@93 = private unnamed_addr constant [14 x i8] c"Invalid marks\00", align 1
@94 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@95 = private unnamed_addr constant [2 x i8] c" \00", align 1
@96 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@97 = private unnamed_addr constant [16 x i8] c"Your marks are \00", align 1
@98 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1

define i32 @main(i32 %0, i8** %1) {
.entry:
  %marks = alloca i32, align 4
  %out = alloca i32, align 4
  call void @_lpython_call_initial_functions(i32 %0, i8** %1)
  %marks1 = alloca i32, align 4
  %out2 = alloca i32, align 4
  store i32 81, i32* %marks1, align 4
  %2 = load i32, i32* %marks1, align 4
  %3 = icmp sle i32 91, %2
  %4 = load i32, i32* %marks1, align 4
  %5 = icmp sle i32 %4, 100
  %6 = icmp eq i1 %3, false
  %7 = select i1 %6, i1 %3, i1 %5
  br i1 %7, label %then, label %else

then:                                             ; preds = %.entry
  store i32 0, i32* %out2, align 4
  %8 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i32 0, i32 0), i8* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %ifcont17

else:                                             ; preds = %.entry
  %9 = load i32, i32* %marks1, align 4
  %10 = icmp sle i32 81, %9
  %11 = load i32, i32* %marks1, align 4
  %12 = icmp sle i32 %11, 90
  %13 = icmp eq i1 %10, false
  %14 = select i1 %13, i1 %10, i1 %12
  br i1 %14, label %then3, label %else4

then3:                                            ; preds = %else
  store i32 1, i32* %out2, align 4
  %15 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @7, i32 0, i32 0), i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  br label %ifcont16

else4:                                            ; preds = %else
  %16 = load i32, i32* %marks1, align 4
  %17 = icmp sle i32 71, %16
  %18 = load i32, i32* %marks1, align 4
  %19 = icmp sle i32 %18, 80
  %20 = icmp eq i1 %17, false
  %21 = select i1 %20, i1 %17, i1 %19
  br i1 %21, label %then5, label %else6

then5:                                            ; preds = %else4
  store i32 2, i32* %out2, align 4
  %22 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @10, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @9, i32 0, i32 0))
  br label %ifcont15

else6:                                            ; preds = %else4
  %23 = load i32, i32* %marks1, align 4
  %24 = icmp sle i32 61, %23
  %25 = load i32, i32* %marks1, align 4
  %26 = icmp sle i32 %25, 70
  %27 = icmp eq i1 %24, false
  %28 = select i1 %27, i1 %24, i1 %26
  br i1 %28, label %then7, label %else8

then7:                                            ; preds = %else6
  store i32 3, i32* %out2, align 4
  %29 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @14, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @15, i32 0, i32 0), i8* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0))
  br label %ifcont14

else8:                                            ; preds = %else6
  %30 = load i32, i32* %marks1, align 4
  %31 = icmp sle i32 41, %30
  %32 = load i32, i32* %marks1, align 4
  %33 = icmp sle i32 %32, 60
  %34 = icmp eq i1 %31, false
  %35 = select i1 %34, i1 %31, i1 %33
  br i1 %35, label %then9, label %else10

then9:                                            ; preds = %else8
  store i32 4, i32* %out2, align 4
  %36 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @18, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i32 0, i32 0), i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @17, i32 0, i32 0))
  br label %ifcont13

else10:                                           ; preds = %else8
  %37 = load i32, i32* %marks1, align 4
  %38 = icmp sle i32 %37, 40
  br i1 %38, label %then11, label %else12

then11:                                           ; preds = %else10
  store i32 5, i32* %out2, align 4
  %39 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @22, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @23, i32 0, i32 0), i8* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @21, i32 0, i32 0))
  br label %ifcont

else12:                                           ; preds = %else10
  store i32 6, i32* %out2, align 4
  %40 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @26, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @27, i32 0, i32 0), i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @25, i32 0, i32 0))
  br label %ifcont

ifcont:                                           ; preds = %else12, %then11
  br label %ifcont13

ifcont13:                                         ; preds = %ifcont, %then9
  br label %ifcont14

ifcont14:                                         ; preds = %ifcont13, %then7
  br label %ifcont15

ifcont15:                                         ; preds = %ifcont14, %then5
  br label %ifcont16

ifcont16:                                         ; preds = %ifcont15, %then3
  br label %ifcont17

ifcont17:                                         ; preds = %ifcont16, %then
  %41 = load i32, i32* %marks1, align 4
  %42 = sext i32 %41 to i64
  %43 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 4, i8* null, i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @30, i32 0, i32 0), i32 2, i64 %42)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @31, i32 0, i32 0), i8* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @29, i32 0, i32 0))
  %44 = load i32, i32* %out2, align 4
  %45 = icmp ne i32 %44, 1
  br i1 %45, label %then18, label %else19

then18:                                           ; preds = %ifcont17
  call void (i8*, ...) @_lcompilers_print_error(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @34, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @32, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @33, i32 0, i32 0))
  call void @exit(i32 1)
  br label %ifcont20

else19:                                           ; preds = %ifcont17
  br label %ifcont20

ifcont20:                                         ; preds = %else19, %then18
  %46 = load i32, i32* %marks1, align 4
  %47 = icmp sle i32 91, %46
  %48 = load i32, i32* %marks1, align 4
  %49 = icmp sle i32 %48, 100
  %50 = icmp eq i1 %47, false
  %51 = select i1 %50, i1 %47, i1 %49
  br i1 %51, label %then21, label %else22

then21:                                           ; preds = %ifcont20
  %52 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @37, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @38, i32 0, i32 0), i8* %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @36, i32 0, i32 0))
  br label %ifcont38

else22:                                           ; preds = %ifcont20
  %53 = load i32, i32* %marks1, align 4
  %54 = icmp sle i32 81, %53
  %55 = load i32, i32* %marks1, align 4
  %56 = icmp sle i32 %55, 90
  %57 = icmp eq i1 %54, false
  %58 = select i1 %57, i1 %54, i1 %56
  br i1 %58, label %then23, label %else24

then23:                                           ; preds = %else22
  %59 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @41, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @42, i32 0, i32 0), i8* %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @40, i32 0, i32 0))
  br label %ifcont37

else24:                                           ; preds = %else22
  %60 = load i32, i32* %marks1, align 4
  %61 = icmp sle i32 71, %60
  %62 = load i32, i32* %marks1, align 4
  %63 = icmp sle i32 %62, 80
  %64 = icmp eq i1 %61, false
  %65 = select i1 %64, i1 %61, i1 %63
  br i1 %65, label %then25, label %else26

then25:                                           ; preds = %else24
  %66 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @45, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @46, i32 0, i32 0), i8* %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @44, i32 0, i32 0))
  br label %ifcont36

else26:                                           ; preds = %else24
  %67 = load i32, i32* %marks1, align 4
  %68 = icmp sle i32 61, %67
  %69 = load i32, i32* %marks1, align 4
  %70 = icmp sle i32 %69, 70
  %71 = icmp eq i1 %68, false
  %72 = select i1 %71, i1 %68, i1 %70
  br i1 %72, label %then27, label %else28

then27:                                           ; preds = %else26
  %73 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @49, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @50, i32 0, i32 0), i8* %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @48, i32 0, i32 0))
  br label %ifcont35

else28:                                           ; preds = %else26
  %74 = load i32, i32* %marks1, align 4
  %75 = icmp sle i32 41, %74
  %76 = load i32, i32* %marks1, align 4
  %77 = icmp sle i32 %76, 60
  %78 = icmp eq i1 %75, false
  %79 = select i1 %78, i1 %75, i1 %77
  br i1 %79, label %then29, label %else30

then29:                                           ; preds = %else28
  %80 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @53, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @54, i32 0, i32 0), i8* %80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @52, i32 0, i32 0))
  br label %ifcont34

else30:                                           ; preds = %else28
  %81 = load i32, i32* %marks1, align 4
  %82 = icmp sle i32 %81, 40
  br i1 %82, label %then31, label %else32

then31:                                           ; preds = %else30
  %83 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @57, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @58, i32 0, i32 0), i8* %83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @56, i32 0, i32 0))
  br label %ifcont33

else32:                                           ; preds = %else30
  %84 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @61, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @62, i32 0, i32 0), i8* %84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @60, i32 0, i32 0))
  br label %ifcont33

ifcont33:                                         ; preds = %else32, %then31
  br label %ifcont34

ifcont34:                                         ; preds = %ifcont33, %then29
  br label %ifcont35

ifcont35:                                         ; preds = %ifcont34, %then27
  br label %ifcont36

ifcont36:                                         ; preds = %ifcont35, %then25
  br label %ifcont37

ifcont37:                                         ; preds = %ifcont36, %then23
  br label %ifcont38

ifcont38:                                         ; preds = %ifcont37, %then21
  %85 = load i32, i32* %marks1, align 4
  %86 = sext i32 %85 to i64
  %87 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 4, i8* null, i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @65, i32 0, i32 0), i32 2, i64 %86)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @66, i32 0, i32 0), i8* %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @64, i32 0, i32 0))
  %88 = load i32, i32* %marks1, align 4
  %89 = icmp sle i32 91, %88
  %90 = load i32, i32* %marks1, align 4
  %91 = icmp sle i32 %90, 100
  %92 = icmp eq i1 %89, false
  %93 = select i1 %92, i1 %89, i1 %91
  br i1 %93, label %then39, label %else40

then39:                                           ; preds = %ifcont38
  %94 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @69, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @70, i32 0, i32 0), i8* %94, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @68, i32 0, i32 0))
  br label %ifcont56

else40:                                           ; preds = %ifcont38
  %95 = load i32, i32* %marks1, align 4
  %96 = icmp sle i32 81, %95
  %97 = load i32, i32* %marks1, align 4
  %98 = icmp sle i32 %97, 90
  %99 = icmp eq i1 %96, false
  %100 = select i1 %99, i1 %96, i1 %98
  br i1 %100, label %then41, label %else42

then41:                                           ; preds = %else40
  %101 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @73, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @74, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @72, i32 0, i32 0))
  br label %ifcont55

else42:                                           ; preds = %else40
  %102 = load i32, i32* %marks1, align 4
  %103 = icmp sle i32 71, %102
  %104 = load i32, i32* %marks1, align 4
  %105 = icmp sle i32 %104, 80
  %106 = icmp eq i1 %103, false
  %107 = select i1 %106, i1 %103, i1 %105
  br i1 %107, label %then43, label %else44

then43:                                           ; preds = %else42
  %108 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @77, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @78, i32 0, i32 0), i8* %108, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @76, i32 0, i32 0))
  br label %ifcont54

else44:                                           ; preds = %else42
  %109 = load i32, i32* %marks1, align 4
  %110 = icmp sle i32 61, %109
  %111 = load i32, i32* %marks1, align 4
  %112 = icmp sle i32 %111, 70
  %113 = icmp eq i1 %110, false
  %114 = select i1 %113, i1 %110, i1 %112
  br i1 %114, label %then45, label %else46

then45:                                           ; preds = %else44
  %115 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @81, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @82, i32 0, i32 0), i8* %115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @80, i32 0, i32 0))
  br label %ifcont53

else46:                                           ; preds = %else44
  %116 = load i32, i32* %marks1, align 4
  %117 = icmp sle i32 41, %116
  %118 = load i32, i32* %marks1, align 4
  %119 = icmp sle i32 %118, 60
  %120 = icmp eq i1 %117, false
  %121 = select i1 %120, i1 %117, i1 %119
  br i1 %121, label %then47, label %else48

then47:                                           ; preds = %else46
  %122 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @85, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @86, i32 0, i32 0), i8* %122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @84, i32 0, i32 0))
  br label %ifcont52

else48:                                           ; preds = %else46
  %123 = load i32, i32* %marks1, align 4
  %124 = icmp sle i32 %123, 40
  br i1 %124, label %then49, label %else50

then49:                                           ; preds = %else48
  %125 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @89, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @90, i32 0, i32 0), i8* %125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @88, i32 0, i32 0))
  br label %ifcont51

else50:                                           ; preds = %else48
  %126 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 2, i8* null, i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @93, i32 0, i32 0))
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @94, i32 0, i32 0), i8* %126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @92, i32 0, i32 0))
  br label %ifcont51

ifcont51:                                         ; preds = %else50, %then49
  br label %ifcont52

ifcont52:                                         ; preds = %ifcont51, %then47
  br label %ifcont53

ifcont53:                                         ; preds = %ifcont52, %then45
  br label %ifcont54

ifcont54:                                         ; preds = %ifcont53, %then43
  br label %ifcont55

ifcont55:                                         ; preds = %ifcont54, %then41
  br label %ifcont56

ifcont56:                                         ; preds = %ifcont55, %then39
  %127 = load i32, i32* %marks1, align 4
  %128 = sext i32 %127 to i64
  %129 = call i8* (i32, i8*, ...) @_lcompilers_string_format_fortran(i32 4, i8* null, i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @97, i32 0, i32 0), i32 2, i64 %128)
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @98, i32 0, i32 0), i8* %129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @96, i32 0, i32 0))
  br label %return

return:                                           ; preds = %ifcont56
  ret i32 0
}

declare void @_lpython_call_initial_functions(i32, i8**)

declare i8* @_lcompilers_string_format_fortran(i32, i8*, ...)

declare void @_lfortran_printf(i8*, ...)

declare void @_lcompilers_print_error(i8*, ...)

declare void @exit(i32)
